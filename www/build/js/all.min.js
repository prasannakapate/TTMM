!function(){"use strict";angular.module("ttmmApp",["ionic","ttmmApp.core","ttmmApp.expense","ttmmApp.account","ttmmApp.common"]).run(function($ionicPlatform,CacheFactory){$ionicPlatform.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),window.StatusBar&&StatusBar.styleDefault(),CacheFactory("getExpenseListCache",{storageMode:"localStorage",maxAge:1e5,deleteOnExpire:"aggressive"}),CacheFactory("loginUserCache",{storageMode:"localStorage",maxAge:1e5,deleteOnExpire:"aggressive"}),CacheFactory("sessionCache",{storageMode:"localStorage",maxAge:1e5,deleteOnExpire:"aggressive"}),CacheFactory("staticCache",{storageMode:"localStorage"})})}).config(function($stateProvider,$urlRouterProvider,$ionicConfigProvider){$ionicConfigProvider.views.transition("ios"),$ionicConfigProvider.views.forwardCache(!1),$ionicConfigProvider.navBar.alignTitle("center"),$ionicConfigProvider.tabs.position("bottom").style("standard"),$stateProvider.state("welcome",{url:"/app/welcome",templateUrl:"app/welcome/welcome.html"}).state("login",{url:"/app/login",templateUrl:"app/login/login.html"}).state("tab",{url:"/tab","abstract":!0,templateUrl:"app/layout/tabs.html"}).state("tab.makeExpense",{url:"/app/makeExpense",views:{"tab-makeExpense":{templateUrl:"app/expense/make-expense/make-expense.html"}}}).state("tab.expenses",{url:"/app/expenses",views:{"tab-expenses":{templateUrl:"app/expense/expense-list/expense-list.html"}}}).state("tab.account",{url:"/app/account",views:{"tab-account":{templateUrl:"app/account/account.html"}}}).state("expense-details",{url:"/app/expenses/expense-details/:id",templateUrl:"app/expense/expense-details/expense-details.html"}).state("newSignUp",{url:"/app/newSignUp",templateUrl:"app/sign-up/sign-up.html"}).state("forgotPassword",{url:"/app/forgotPassword",templateUrl:"app/forgot-password/forgot-password.html"}).state("contactUs",{url:"/app/contactUs",templateUrl:"app/contact-us/contact-us.html"}),$urlRouterProvider.otherwise("/app/welcome")})}(),function(){"use strict";angular.module("ttmmApp.account",[])}(),function(){"use strict";angular.module("ttmmApp.common",[])}(),function(){"use strict";angular.module("ttmmApp.core",["ionic-datepicker","ngSanitize","ngCookies","ngCordova","ngMessages","angular-cache"])}(),function(){"use strict";angular.module("ttmmApp.expense",[])}(),function(){"use strict";function commonService(){function getKey(){var key={appid:"mF8l9ob91ObHNIgzfX8tnzD8WKcRJGyUkYxm45o4",restid:"l8qZLpxhTxZWZYmfJZJu3r5fvwcJcHGYTe7w6igT"};return key}var service={getKey:getKey};return service}angular.module("ttmmApp").factory("commonService",commonService),commonService.$inject=[]}(),function(){"use strict";function expenseDataApi($http,$q,$ionicLoading,$timeout,CacheFactory,userLoginDataApi,commonService){function getExpenseList(forceRefresh){"undefined"==typeof forceRefresh&&(forceRefresh=!1);var deffered=$q.defer(),cacheKey="expenses",expenseListData=null;return forceRefresh||(expenseListData=self.getExpenseListCache.get(cacheKey)),expenseListData?deffered.resolve(expenseListData):($ionicLoading.show({template:'<div class="ion-loading-c"></div> Loading...'}),$http.get("https://api.parse.com/1/classes/Expenses",{headers:{"X-Parse-Application-Id":key.appid,"X-Parse-REST-API-Key":key.restid}}).success(function(response){$timeout(function(){self.getExpenseListCache.put(cacheKey,response),$ionicLoading.hide(),deffered.resolve(response)},2e3)}).error(function(error,status){$timeout(function(){console.log("Error While making HTTP Call"),$ionicLoading.hide(),deffered.reject(error,status)},2e3)})),deffered.promise}function makeExpense(expenseData){var deffered=$q.defer();return $http.post("https://api.parse.com/1/classes/Expenses",expenseData,{headers:{"X-Parse-Application-Id":key.appid,"X-Parse-REST-API-Key":key.restid}}).success(function(response){deffered.resolve(response),console.log("make new expense success")}).error(function(error,status){deffered.reject(error,status),console.log("make new expense Error",error," Status =",status)}),deffered.promise}function removeExpense(id){var deffered=$q.defer();return $http["delete"]("https://api.parse.com/1/classes/Expenses/"+id,{headers:{"X-Parse-Application-Id":key.appid,"X-Parse-REST-API-Key":key.restid}}).success(function(response){console.log("Data delete successfully"),deffered.resolve(response)}).error(function(error,status){console.log("Data delete error"),deffered.reject(error,status)}),deffered.promise}function editExpense(id,data){var deffered=$q.defer();return $http.put("https://api.parse.com/1/classes/Expenses/"+id,data,{headers:{"X-Parse-Application-Id":key.appid,"X-Parse-REST-API-Key":key.restid}}).success(function(response){console.log("Data edit successfully"),deffered.resolve(response)}).error(function(error,status){console.log("Data edit error"),deffered.reject(error,status)}),deffered.promise}var key=commonService.getKey();self.getExpenseListCache=CacheFactory.get("getExpenseListCache"),self.getExpenseListCache.setOptions({onExpire:function(key,value){getExpenseList().then(function(){console.log("getExpenseListCache was automatically refreshed",new Date)},function(){console.log("Error getting data. Putting expired item back to cache",new Date),self.getExpenseListCache.put(key,value)})},cacheFlushInterval:55e3,maxAge:36e5,verifyIntegrity:!0});var service={getExpenseList:getExpenseList,makeExpense:makeExpense,removeExpense:removeExpense,editExpense:editExpense};return service}angular.module("ttmmApp").factory("expenseDataApi",expenseDataApi),expenseDataApi.$inject=["$http","$q","$ionicLoading","$timeout","CacheFactory","userLoginDataApi","commonService"]}(),function(){"use strict";function userLoginDataApi($http,$q,$ionicLoading,$timeout,$ionicPopup,commonService){function getCurrentUser(){var deffered=$q.defer();return $http.get("https://api.parse.com/1/users/me",{headers:{"X-Parse-Application-Id":key.appid,"X-Parse-REST-API-Key":key.restid,"X-Parse-Session-Token":vm.userData.sessionToken}}).success(function(response){deffered.resolve(response)}).error(function(error,status){console.log("error getting current users details",error,status),deffered.reject(error,status)}),deffered.promise}function logoutUser(){var deffered=$q.defer();return $http.post("https://api.parse.com/1/sessions/"+vm.userData.objectId,{headers:{"X-Parse-Application-Id":key.appid,"X-Parse-REST-API-Key":key.restid,"X-Parse-Session-Token":vm.userData.sessionToken}}).success(function(response){console.log("Current users Successfully logout",response),deffered.resolve(response)}).error(function(error,status){console.log("error while logging out for currentUser",error,status),deffered.reject(error,status)}),deffered.promise}function loginUser(username,password){var deffered=$q.defer();return $ionicLoading.show({template:'<div class="ion-loading-c"></div> Loading...'}),$http.get("https://api.parse.com/1/login",{headers:{"X-Parse-Application-Id":key.appid,"X-Parse-REST-API-Key":key.restid},params:{username:username,password:password}}).success(function(response){$timeout(function(){$ionicLoading.hide(),deffered.resolve(response),vm.userData=response},2e3)}).error(function(error,status){$timeout(function(){console.log("Error While making HTTP Call"),$ionicLoading.hide(),deffered.reject(error,status),$ionicPopup.alert({title:"Try again !",template:"Incorrect username or password",okType:"button-assertive"})},2e3)}),deffered.promise}var key=commonService.getKey(),vm=this;vm.userData="";var LoginServices={loginUser:loginUser,logoutUser:logoutUser,getCurrentUser:getCurrentUser};return LoginServices}angular.module("ttmmApp").factory("userLoginDataApi",userLoginDataApi),userLoginDataApi.$inject=["$http","$q","$ionicLoading","$timeout","$ionicPopup","commonService"]}(),function(){"use strict";function sessionService($log,CacheFactory,userLoginDataApi,commonService){function getUser(){return self.user}function setUser(user){return self.user=user,self.user.put(cacheKey,user),self.user}function getAccessToken(){return self.accessToken}function setAccessToken(token){return self.accessToken=token,CacheFactory.put(cacheKey,token),self}function destroy(){setUser(null),setAccessToken(null)}commonService.getKey();self.userCache=CacheFactory.get("loginUserCache"),self.accessTokenCache=CacheFactory.get("sessionCache"),self.userCache.setOptions({onExpire:function(key,value){userLoginDataApi.loginUser().then(function(){console.log("userLoginDataApi.loginUser was automatically refreshed",new Date)},function(){console.log("Error getting data. Putting expired item back to cache",new Date),self.userCache.put(key,value)})},cacheFlushInterval:55e3,maxAge:36e5,verifyIntegrity:!0}),self.accessTokenCache.setOptions({onExpire:function(key,value){userLoginDataApi.loginUser().then(function(){console.log("userLoginDataApi.loginUser was automatically refreshed",new Date)},function(){console.log("Error getting data. Putting expired item back to cache",new Date),self.accessTokenCache.put(key,value)})},cacheFlushInterval:55e3,maxAge:36e5,verifyIntegrity:!0});var service={getUser:getUser,setUser:setUser,getAccessToken:getAccessToken,destroy:destroy};return service}angular.module("ttmmApp").factory("sessionService",sessionService),sessionService.$inject=["$log","CacheFactory","userLoginDataApi","commonService"]}(),function(){"use strict";function signUpDataApi($http,$q,$ionicLoading,$timeout,commonService){function newUserSignUp(newUserSignUpData){var deffered=$q.defer();return $ionicLoading.show({template:'<div class="ion-loading-c"></div> Loading...'}),$http.post("https://api.parse.com/1/users",newUserSignUpData,{headers:{"X-Parse-Application-Id":key.appid,"X-Parse-REST-API-Key":key.restid}}).success(function(response){$timeout(function(){$ionicLoading.hide(),deffered.resolve(response),console.log("signUpUserData completed successfully",response)},2e3)}).error(function(error,status){$timeout(function(){$ionicLoading.hide(),deffered.reject(error,status),console.log(JSON.stringify(error,status))},2e3)}),deffered.promise}var key=commonService.getKey(),service={newUserSignUp:newUserSignUp};return service}angular.module("ttmmApp").factory("signUpDataApi",signUpDataApi),signUpDataApi.$inject=["$http","$q","$ionicLoading","$timeout","commonService"]}(),function(){"use strict";function AccountCtrl(userLoginDataApi){function activate(){userLoginDataApi.getCurrentUser().then(function(data){vm.currentUser=data})}function currentUserLogout(){console.log("currentUserLogout called"),userLoginDataApi.logoutUser().then(function(data){console.log("Logout user datails",data)})}var vm=this;vm.title="AccountCtrl",vm.currentUser="",vm.currentUserLogout=currentUserLogout,activate()}angular.module("ttmmApp.account").controller("AccountCtrl",AccountCtrl),AccountCtrl.$inject=["userLoginDataApi"]}(),function(){"use strict";function LoginCtrl($state,userLoginDataApi,$cookieStore){function userLogin(){userLoginDataApi.loginUser(vm.userData.username,vm.userData.password).then(function(user){$state.go("tab.makeExpense"),vm.currentUser=user,console.log("User details",vm.currentUser)})}function fbLogin(){function getUserInfo(){FB.api("/me",function(response){console.log("Facebook Login RESPONSE: "+angular.toJson(response)),FB.api("/me/picture?type=normal",function(picResponse){console.log("Facebook Login RESPONSE: "+picResponse.data.url),response.imageUrl=picResponse.data.url;var user={};user.name=response.name,user.email=response.email,response.gender?"male"===response.gender.toString().toLowerCase()?user.gender="M":user.gender="F":user.gender="",user.profilePic=picResponse.data.url,$cookieStore.put("userInfo",user),$state.go("tab.makeExpense")})})}FB.login(function(response){response.authResponse?getUserInfo():console.log("User cancelled login or did not fully authorize.")},{scope:"email,user_photos,user_videos"})}var vm=this;vm.userData={},vm.currentUser={},vm.userLogin=userLogin,vm.fbLogin=fbLogin}angular.module("ttmmApp").controller("LoginCtrl",LoginCtrl),LoginCtrl.$inject=["$state","userLoginDataApi","$cookieStore"]}(),function(){"use strict";function SignUpCtrl($state,signUpDataApi){function userSignUp(userData){signUpDataApi.newUserSignUp(userData).then(function(){console.log("New user sign up data",userData),$state.go("login")})}var vm=this;vm.userSignUp=userSignUp,vm.userData={}}angular.module("ttmmApp").controller("SignUpCtrl",SignUpCtrl),SignUpCtrl.$inject=["$state","signUpDataApi"]}(),function(){"use strict";function WelcomeCtrl($state){}angular.module("ttmmApp").controller("WelcomeCtrl",WelcomeCtrl),WelcomeCtrl.$inject=["$state"]}(),function(){"use strict";function ExpenseDetailsCtrl($scope,$stateParams,$filter,expenseDataApi){$scope.expenseMonth=$stateParams.id,$scope.expenseDetails="",$scope.totalMonthlySum="",$scope.loadList="",$scope.loadList=function(forceRefresh){expenseDataApi.getExpenseList(forceRefresh).then(function(data){$scope.expenseDetails=_(data.results).chain().groupBy(function(item){return item.expenseMonth=$filter("date")(item.expenseMonth,"MMM-yyyy"),item.expenseMonth.substring(0,8)}).pairs().map(function(currentItem){return _.object(_.zip(["month","expenses"],currentItem))}).find({month:$scope.expenseMonth}).pick("expenses").value(),$scope.totalMonthlySum=_($scope.expenseDetails.expenses).chain().sum("expenseAmount").value()})},$scope.loadList(!1)}angular.module("ttmmApp.expense").controller("ExpenseDetailsCtrl",ExpenseDetailsCtrl),ExpenseDetailsCtrl.$inject=["$scope","$stateParams","$filter","expenseDataApi"]}(),function(){"use strict";function ExpenseListCtrl($scope,$filter,expenseDataApi){function loadList(forceRefresh){expenseDataApi.getExpenseList(forceRefresh).then(function(data){vm.expenseGroupByMonth=_(data.results).chain().groupBy(function(item){return item.expenseMonth=$filter("date")(item.expenseMonth,"MMM-yyyy"),item.expenseMonth}).pairs().map(function(currentItem){return _.object(_.zip(["month","expenseDetails"],currentItem))}).value()})["finally"](function(){$scope.$broadcast("scroll.refreshComplete")})}var vm=this;vm.title="My Expenses",vm.expenseGroupByMonth="",vm.loadList=loadList,vm.loadList(!1)}angular.module("ttmmApp.expense").controller("ExpenseListCtrl",ExpenseListCtrl),ExpenseListCtrl.$inject=["$scope","$filter","expenseDataApi"]}(),function(){"use strict";function MakeExpenseCtrl($scope,$state,expenseDataApi,userLoginDataApi){function datePickerCallback(val){"undefined"==typeof val?console.log("No date selected"):($scope.datepickerObjectPopup.inputDate=val,$scope.expense.expenseMonth=val,console.log("Selected date is : ",val))}function makeExpense(expense){console.log("makeExpense Called",expense),$scope.loadList=function(forceRefresh){expenseDataApi.makeExpense(expense).then(function(data){expenseDataApi.getExpenseList(forceRefresh).then(function(data){$state.go("tab.expenses")})})},$scope.loadList(!1)}$scope.loadList="",$scope.currentUser="",$scope.makeExpense=makeExpense,$scope.expense={},$scope.datepickerObject={},$scope.expenseMonth="",$scope.datepickerObject.inputDate=new Date,$scope.datepickerObjectPopup={titleLabel:"Select Expense Date",todayLabel:"Today",closeLabel:"Close",setLabel:"Set",setButtonType:"button-royal",todayButtonType:"button-stable",closeButtonType:"button-stable",inputDate:$scope.datepickerObject.inputDate,mondayFirst:!0,templateType:"popup",showTodayButton:"true",modalHeaderColor:"bar-positive",modalFooterColor:"bar-positive",from:new Date(2012,8,2),to:new Date(2018,8,25),callback:function(val){datePickerCallback(val)},dateFormat:"MMM - yyyy - dd",closeOnSelect:!1}}angular.module("ttmmApp.expense").controller("MakeExpenseCtrl",MakeExpenseCtrl),MakeExpenseCtrl.$inject=["$scope","$state","expenseDataApi","userLoginDataApi"]}();